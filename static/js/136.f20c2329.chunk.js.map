{"version":3,"file":"static/js/136.f20c2329.chunk.js","mappings":"iKACA,SAAgB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,uBCEpK,MASA,EAToBA,IAChB,IAAIC,EAAO,YAAYD,EAAME,KAC7B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGC,EAAEC,UAAUD,EAAEE,SAASC,UACtCL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QACxB,ECAd,EANiBX,IAETG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEO,QAAQJ,SAAER,EAAMY,U,cCG1C,MAyBMC,EAAkBb,IACpB,MAAM,SACFc,EAAQ,aACRC,EAAY,MACZC,IACAC,EAAAA,EAAAA,MAOJ,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUJ,GANKK,IACrBpB,EAAMmB,SAASC,GACfJ,GAAO,IAIuCR,SAAA,EAC1CL,EAAAA,EAAAA,KAAA,YAAUkB,YAAY,wBAAyBP,EAAS,wBACxDX,EAAAA,EAAAA,KAAA,OAAAK,UAAKL,EAAAA,EAAAA,KAAA,SAAOmB,KAAK,eACd,EAIf,EA7CiBtB,IAEb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIrB,IAAUH,EAAAA,EAAAA,KAACyB,EAAU,CAAiBjB,KAAML,EAAOK,KAAMT,GAAII,EAAOJ,IAAzCI,EAAOJ,MACtE2B,EAAmBN,EAAMO,SAASH,KAAIf,IAAWT,EAAAA,EAAAA,KAAC4B,EAAO,CAAkBnB,QAASA,EAAQA,QAClCV,GAAIU,EAAQV,IADPU,EAAQV,MAO3E,OACIgB,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAEqB,QAAQlB,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE2B,aAAaxB,SAC1BiB,KAELP,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAEyB,SAAStB,SAAA,CACtBqB,GACD1B,EAAAA,EAAAA,KAACU,EAAc,CAACM,SAXFc,IACtBjC,EAAMkC,YAAYD,EAAOE,kBAAkB,SAYrC,ECxBd,IAAIC,EAA8Bb,IAAK,CACnCc,OAAQd,EAAMe,KAAKD,SAGhB,MCSP,EDTiCE,KAE7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAK3C,MAAMqC,QACTlC,EAAAA,EAAAA,KAACoC,EAAS,IAAKI,KAAK3C,SADIG,EAAAA,EAAAA,KAACyC,EAAAA,GAAQ,CAAClC,GAAI,UAEjD,EAKJ,OAFiCmC,EAAAA,EAAAA,IAAQT,EAARS,CAAoCL,EAEpC,ECFrC,EAXyBM,KACrB,MAAMtB,GAAcuB,EAAAA,EAAAA,KAAYxB,GAASA,EAAMC,cACzCwB,GAAWC,EAAAA,EAAAA,MAMjB,OAAO9C,EAAAA,EAAAA,KAAC+C,EAAO,CAAC1B,YAAaA,EAAaU,YAJrBC,IACjBa,GAASG,EAAAA,EAAAA,GAAmBhB,GAAmB,GAGmB,G","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__AUhA4\",\"dialog\":\"Dialogs_dialog__sOs9V\",\"active\":\"Dialogs_active__sB-hm\",\"messages\":\"Dialogs_messages__0ZkkO\",\"message\":\"Dialogs_message__FPKhl\"};","import s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n\r\n","import s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(message => <Message key={message.id} message={message.message}\r\n                                                                  id={message.id}/>);\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.sendMessage(values.newMessageElement);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={onSendMessageClick} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm()\r\n\r\n    const onSubmitHandler = (data) => {\r\n        props.onSubmit(data);\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmitHandler)}>\r\n            <textarea placeholder='Enter your massege' {...register('newMessageElement')}/>\r\n            <div><input type='submit'/></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to={`/login`} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nconst DialogsContainer = () => {\r\n    const dialogsPage = useSelector(state => state.dialogsPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const sendMessage = (newMessageElement) => {\r\n        dispatch(sendMessageCreator(newMessageElement));\r\n    };\r\n\r\n    return <Dialogs dialogsPage={dialogsPage} sendMessage={sendMessage} />;\r\n};\r\n\r\nexport default withAuthRedirect(DialogsContainer);\r\n"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","name","message","AddMessageForm","register","handleSubmit","reset","useForm","_jsxs","onSubmit","data","placeholder","type","state","dialogsPage","dialogsElements","dialogs","map","DialogItem","messagesElements","messages","Message","dialogsItems","values","sendMessage","newMessageElement","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate","connect","DialogsContainer","useSelector","dispatch","useDispatch","Dialogs","sendMessageCreator"],"sourceRoot":""}
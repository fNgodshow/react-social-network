{"version":3,"file":"static/js/136.0c91a8e9.chunk.js","mappings":"6IACA,SAAgB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,uBCEpK,MASA,EAToBA,IAChB,IAAIC,EAAO,YAAYD,EAAME,KAC7B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGC,EAAEC,UAAUD,EAAEE,SAASC,UACtCL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QACxB,ECAd,EANiBX,IAETG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEO,QAAQJ,SAAER,EAAMY,U,wBCG1C,MA+BMC,GAAsBC,E,QAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAPJd,IACbgB,EAAAA,EAAAA,MAAA,QAAMC,SAAUjB,EAAMkB,aAAcC,OAAO,GAAEX,SAAA,EAChDL,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,UAAW,WAAYV,KAAM,oBAAqBW,YAAa,wBACtEnB,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,cAMhB,EAjCiBR,IAEb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIrB,IAAUH,EAAAA,EAAAA,KAACyB,EAAU,CAAiBjB,KAAML,EAAOK,KAAMT,GAAII,EAAOJ,IAAzCI,EAAOJ,MACtE2B,EAAmBN,EAAMO,SAASH,KAAIf,IAAWT,EAAAA,EAAAA,KAAC4B,EAAO,CAAkBnB,QAASA,EAAQA,QAASV,GAAIU,EAAQV,IAAlDU,EAAQV,MAM3E,OACIc,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAEqB,QAAQlB,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE2B,aAAaxB,SAC1BiB,KAELT,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAEyB,SAAStB,SAAA,CACtBqB,GACD1B,EAAAA,EAAAA,KAACU,EAAmB,CAACI,SAXPgB,IACtBjC,EAAMkC,YAAYD,EAAOE,kBAAkB,SAYrC,E,cCvBd,IAAIC,EAA8Bb,IAAK,CACnCc,OAAQd,EAAMe,KAAKD,SCgBvB,SAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAfmBjB,IACZ,CACHC,YAAaD,EAAMC,gBAIDiB,IACf,CACHP,YAAcC,IACVM,GAASC,EAAAA,EAAAA,GAAmBP,GAAmB,ODR1BQ,IAE7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAK/C,MAAMqC,QACTlC,EAAAA,EAAAA,KAACwC,EAAS,IAAKI,KAAK/C,SADIG,EAAAA,EAAAA,KAAC6C,EAAAA,GAAQ,CAACtC,GAAI,UAEjD,EAKJ,OAFiC8B,EAAAA,EAAAA,IAAQJ,EAARI,CAAoCI,EAEpC,GCErC,CAICK,E","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__AUhA4\",\"dialog\":\"Dialogs_dialog__sOs9V\",\"active\":\"Dialogs_active__sB-hm\",\"messages\":\"Dialogs_messages__0ZkkO\",\"message\":\"Dialogs_message__FPKhl\"};","import s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n\r\n","import s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(message => <Message key={message.id} message={message.message} id={message.id}/>);\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.sendMessage(values.newMessageElement);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit={onSendMessageClick} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} action=\"\">\r\n        <Field component={'textarea'} name={'newMessageElement'} placeholder={'Enter your massege'} />\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'addMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to={`/login`} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\n","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToprops = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageElement) => {\r\n            dispatch(sendMessageCreator(newMessageElement));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToprops),\r\n    withAuthRedirect\r\n    )\r\n(Dialogs);\r\n"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","name","message","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","action","Field","component","placeholder","state","dialogsPage","dialogsElements","dialogs","map","DialogItem","messagesElements","messages","Message","dialogsItems","values","sendMessage","newMessageElement","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","React","render","this","Navigate","Dialogs"],"sourceRoot":""}
{"version":3,"file":"static/js/753.921c1911.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__koz-B\",\"userPhoto\":\"ProfileInfo_userPhoto__ekoDh\",\"profileStatus\":\"ProfileInfo_profileStatus__qIfSB\",\"contacts\":\"ProfileInfo_contacts__1Qycu\"};","import {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className={s.profileStatus} onDoubleClick={activateEditMode}>\r\n                        {props.status || 'Here should be my status'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           onBlur={deactivateEditMode}\r\n                           autoFocus={true}\r\n                           value={status}\r\n                           type=\"text\"/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ProfileDataFormRedux = ({ profile, ...props }) => {\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        defaultValues: profile,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            reset(profile);\r\n        }\r\n    }, [profile, reset]);\r\n\r\n    const onSubmitHandler = (data) => {\r\n        props.onSubmit(data);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmitHandler)}>\r\n            <div>\r\n                <input placeholder=\"Full name\" {...register(\"fullName\")} />\r\n            </div>\r\n            <div>\r\n                <input type=\"checkbox\" {...register(\"lookingForAJob\")} />\r\n            </div>\r\n            <div>\r\n        <textarea\r\n            placeholder=\"My professional skills\"\r\n            {...register(\"lookingForAJobDescription\")}\r\n        />\r\n            </div>\r\n            <div>\r\n                <textarea placeholder=\"About Me\" {...register(\"aboutMe\")} />\r\n            </div>\r\n            {profile.contacts &&\r\n                Object.keys(profile.contacts).map((key, index) => (\r\n                    <div key={index}>\r\n                        <div>{key}:</div>\r\n                        <input placeholder={key} {...register(`contacts.${key}`)} />\r\n                    </div>\r\n                ))}\r\n            <div>\r\n                <input type=\"submit\" value=\"Сохранить\" />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProfileDataFormRedux;\r\n","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/userImage.webp'\r\nimport {useEffect, useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileDataFormRedux from \"./ProfileDataForm\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n                console.log(props.profile)\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n            <div className={s.descriptionBlock}>\r\n                    <div>\r\n                        <img className={s.userPhoto} src={props.profile.photos.large || userPhoto} alt=\"\"/>\r\n                        {props.isOwner &&\r\n                            <div>\r\n                                <label htmlFor=\"change_photo\">Choose images to upload</label>\r\n                                <div>\r\n                                    <input id='change_photo' type={'file'} onChange={onMainPhotoSelected}/>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                        {editMode &&\r\n                            <ProfileDataFormRedux initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/>\r\n                        }\r\n                        {!editMode &&\r\n                            <ProfileData goToEditMode={() => {\r\n                                setEditMode(true)\r\n                            }} isOwner={props.isOwner} profile={props.profile}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        {props.isOwner &&\r\n            <button className='button' onClick={props.goToEditMode}>Edit info</button>\r\n        }\r\n        <div>\r\n            <b>My name:</b> {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>about Me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        <div>\r\n            <b>lookingForAJobDescription:</b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b>\r\n            {\r\n                Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}><b>{contactTitle} : </b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__71-vS\",\"posts\":\"MyPosts_posts__K6Er9\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__BA5PW\"};","import s from './Post.module.css';\r\nimport React from \"react\";\r\nimport userPhoto from \"../../../../assets/images/userImage.webp\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={props.profile ? props.profile.photos.small : userPhoto}\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like({props.likeCounts})</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map(post => <Post key={post.id} message={post.message}\r\n                                                     likesCount={post.likesCount} profile={props.profile}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my post</h3>\r\n            <div>\r\n                <AddMessageForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm()\r\n\r\n    const onSubmitHandler = (data) => {\r\n        props.onSubmit(data);\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmitHandler)}>\r\n            <textarea placeholder='Enter your post' {...register('newPostText')}/>\r\n            <div><input type='submit'/></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default React.memo(MyPosts);","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst MyPostsContainer = () => {\r\n    const posts = useSelector(state => state.profilePage.posts);\r\n    const profile = useSelector(state => state.profilePage.profile);\r\n    const dispatch = useDispatch();\r\n\r\n    const addPost = (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n    };\r\n\r\n    return <MyPosts posts={posts} profile={profile} addPost={addPost} />;\r\n};\r\n\r\nexport default MyPostsContainer;\r\n","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}  />\r\n            <MyPostsContainer profile={props.profile} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getUsersProfile,\r\n    getUsersStatus,\r\n    saveProfile,\r\n    savePhoto,\r\n    setUserProfile,\r\n    updateStatus\r\n} from \"../../redux/profile-reducer\";\r\n\r\nconst ProfileContainer = () => {\r\n    const { profileId } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const profile = useSelector((state) => state.profilePage.profile);\r\n    const status = useSelector((state) => state.profilePage.status);\r\n    const authorizedUserId = useSelector((state) => state.auth.id);\r\n    const isAuth = useSelector((state) => state.auth.isAuth);\r\n\r\n    const refreshProfile = () => {\r\n        let id = profileId;\r\n        if (!id) {\r\n            id = authorizedUserId;\r\n            if (!id) {\r\n              navigate('/login');\r\n            }\r\n        }\r\n        dispatch(getUsersProfile(id));\r\n        dispatch(getUsersStatus(id));\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n    }, [profileId, authorizedUserId, dispatch, profile]);\r\n\r\n    return (\r\n        <div>\r\n            <Profile\r\n                isOwner={!profileId}\r\n                profile={profile}\r\n                status={status}\r\n                updateStatus={(status) => dispatch(updateStatus(status))}\r\n                savePhoto={(photoFile) => dispatch(savePhoto(photoFile))}\r\n                saveProfile={(profileData) => dispatch(saveProfile(profileData))}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContainer;\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","className","s","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","autoFocus","type","_ref","profile","register","handleSubmit","reset","formState","errors","useForm","defaultValues","onSubmit","data","placeholder","contacts","Object","keys","map","key","index","ProfileData","isOwner","onClick","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","Preloader","src","photos","large","userPhoto","alt","htmlFor","id","target","files","length","savePhoto","ProfileStatusWithHooks","ProfileDataFormRedux","initialValues","formData","saveProfile","then","console","log","small","message","likeCounts","MyPosts","postsElement","posts","post","Post","likesCount","AddMessageForm","values","addPost","newPostText","React","MyPostsContainer","useSelector","state","profilePage","dispatch","useDispatch","addPostActionCreator","ProfileInfo","ProfileContainer","profileId","useParams","navigate","useNavigate","authorizedUserId","auth","isAuth","refreshProfile","getUsersProfile","getUsersStatus","Profile","photoFile","profileData"],"sourceRoot":""}
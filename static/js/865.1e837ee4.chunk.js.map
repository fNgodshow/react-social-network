{"version":3,"file":"static/js/865.1e837ee4.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__koz-B\"};","import {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || '-------'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           onBlur={deactivateEditMode}\r\n                           autoFocus={true}\r\n                           value={status}\r\n                           type=\"text\"/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (<div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large} alt=\"\"/>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    </div>);\r\n\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__71-vS\",\"posts\":\"MyPosts_posts__K6Er9\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__BA5PW\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://avatars.mds.yandex.net/i?id=18a8baedb51cd982584702a3204c6bc34471b8c7-11923369-images-thumbs&n=13\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like({props.likeCounts})</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    console.log('Render')\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my post</h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} action=\"\">\r\n        <div>\r\n            <Field component={'textarea'} name={'newPostText'} />\r\n        </div>\r\n        <button>Add post</button>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default React.memo(MyPosts);","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        // newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}  />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport {getUsersProfile, getUsersStatus, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n// HOC для передачи параметров URL в классовый компонент\r\nfunction withRouter(Component) {\r\n    return function Wrapper(props) {\r\n        const params = useParams();\r\n        return <Component {...props} params={params}/>;\r\n    };\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let profileId = this.props.params.profileId;\r\n        if (!profileId) {\r\n            profileId = this.props.authorizedUserId;\r\n            // if(!profileId) {\r\n            //     this.props.history.push('/login')\r\n            // }\r\n        }\r\n        this.props.getUsersProfile(profileId)\r\n        this.props.getUsersStatus(profileId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Получение данных из Redux Store\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getUsersProfile, getUsersStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","autoFocus","type","profile","className","s","src","photos","large","alt","ProfileStatusWithHooks","Preloader","message","likeCounts","MyPosts","postsElement","posts","map","post","Post","likesCount","id","console","log","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","action","Field","component","name","React","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","profileId","this","params","authorizedUserId","getUsersProfile","getUsersStatus","render","Profile","compose","auth","isAuth","setUserProfile","Component","useParams"],"sourceRoot":""}